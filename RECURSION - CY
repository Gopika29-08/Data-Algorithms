Single File Programming Question
===============================
     1.Problem Statement
===============================
Emma, the owner of a coffee shop, wants to calculate the price of a cup of coffee based on the price and size.
If the price per ounce exceeds 0.25, she applies a 10% price increase. After the increase's final price exceeds 6, she offers a 5% discount. 
Your task is to implement these price calculations and display the final price.

Formulas:
Price per Ounce: price/cup size
Price Update (if the  price per ounce is greater than 0.25): price * 1.1
Final Price (if the updated price is greater than 6): updated price * 0.95

Input format :
The input consists of two space-separated double values representing the price and the cup size.

Output format :
The output prints the final price after any updates and discounts. (All values are formatted to two decimal places).

Refer to the sample output for formatting specifications.

Code constraints :
The given test cases fall under the following constraints:

0.00 ≤ price ≤ 100.00

0.00 ≤ cupSize ≤ 100.00

Sample test cases :
Input 1 :
5.00 16.00
Output 1 :
5.50
Input 2 :
4.50 12.00
Output 2 :
4.95
Input 3 :
7.00 20.00
Output 3 :
7.32

===============================
         Program
===============================
#include<bits/stdc++.h>
using namespace std;
double Price(double price,double size){
    if(size >0 && price/size >0.25)
         price*=1.1;
    if(price > 6)
         price*=0.95;
    return price;
}
int main(){
    double price,size;
    cin>>price>>size;
    cout<<fixed<<setprecision(2)<<Price(price,size);
    return 0;
}

Single File Programming Question
=================================
      2.Problem Statement
=================================
During an archaeological expedition, a team discovers the "Disk of Light," an artifact consisting 
of concentric rings with unique symbols. To unlock its powers, they must perform the "Tower of Wisdom" ritual.

In this ritual:

There are three pedestals: Source (A), Auxiliary (B), and Illuminated (C).
Disks are stacked on the Source pedestal, smaller ones on top of larger ones.
Only one disk can be moved at a time.
A disk can only be placed on top of a larger disk or an empty pedestal.

Write a program to assist the archaeological team in calculating the total number of times
each ring of the Disk of Light is moved during the Tower of Wisdom ritual.

Input format :
The input consists of an integer denoting the number of disks.

Output format :
The output displays the sequence of moves required to solve the puzzle.
The last line of output displays the total number of times the disk is moved.

Refer to the sample output for formatting specifications.

Code constraints :
The given test cases fall under the following specifications:

1 ≤ n ≤ 8

Sample test cases :
Input 1 :
3
Output 1 :
Move disk 1 from A to C
Move disk 2 from A to B
Move disk 1 from C to B
Move disk 3 from A to C
Move disk 1 from B to A
Move disk 2 from B to C
Move disk 1 from A to C
Total number of times the disk is moved: 7
Input 2 :
4
Output 2 :
Move disk 1 from A to B
Move disk 2 from A to C
Move disk 1 from B to C
Move disk 3 from A to B
Move disk 1 from C to A
Move disk 2 from C to B
Move disk 1 from A to B
Move disk 4 from A to C
Move disk 1 from B to C
Move disk 2 from B to A
Move disk 1 from C to A
Move disk 3 from B to C
Move disk 1 from A to B
Move disk 2 from A to C
Move disk 1 from B to C
Total number of times the disk is moved: 15

=================================
           Program
=================================
#include<bits/stdc++.h>
using namespace std;
void TOH(int num, char S,char D,char A,int &count){
    if(num==1){
        cout<<"Move disk 1 from "<<S<<" to "<<D<<endl;
        count++;
        return;
    }
    
    TOH(num-1,S,A,D,count);
    cout<<"Move disk "<<num<<" from "<<S<<" to "<<D<<endl;
    count++;
    TOH(num-1,A,D,S,count);
}
int main(){
    int n;
    cin>>n;
    int count;
    TOH(n,'A','C','B',count);
    cout<<"Total number of times the disk is moved: "<<count<<endl;
}



