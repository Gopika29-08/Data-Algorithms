Single File Programming Question
==================================
     1.Problem Statement
==================================

Neha, a computer scientist, is working on efficient text processing for search engines.
She has a list of words in random order and needs to sort them in lexicographic order 
using Heap Sort to improve search performance.

Help Neha implement Heap Sort to arrange the words in lexicographic order efficiently.

Input format :
The first line consists of an integer N denoting the number of strings.

The next line consists of N﻿ space-separated strings.

Output format :
The output displays N space-separated sorted strings in lexicographic order.

Refer to the sample output for the formatting specifications.

Code constraints :
The given test cases fall under the following specifications:

1 ≤ N ≤ 20

All strings contain only lowercase and uppercase English letters.

Sample test cases :
Input 1 :
10
banana pineapple mango chikoo jack star guava lemon tomato orange
Output 1 :
banana chikoo guava jack lemon mango orange pineapple star tomato 
Input 2 :
6
kiwi grape fig Date apple Banana
Output 2 :
Banana Date apple fig grape kiwi 

==================================
          Program
==================================
#include<bits/stdc++.h>
using namespace std;
void maxHeapify(vector<string> &arr, int n,int i){
    int largest = i;
    int l = 2*i+1;
    int r = 2*i+2;
    if(l<n && arr[l] > arr[largest])
        largest = l;
    if(r<n && arr[r] > arr[largest])
        largest = r;
    if(largest!=i){
        swap(arr[i],arr[largest]);
        maxHeapify(arr,n,largest);
    }
}
void HeapSort(vector<string> &arr, int n){
    for(int i=n/2-1;i>=0;i--)
        maxHeapify(arr,n,i);
    for(int i=n-1;i>0;i--){
        swap(arr[0],arr[i]);
        maxHeapify(arr,i,0);
    }
}
int main(){
    int n;
    cin>>n;
    vector<string>arr(n);
    for(int i=0;i<n;i++)
        cin>>arr[i];
    HeapSort(arr,n);
    for(int i=0;i<n;i++)
        cout<<arr[i]<<" ";
    cout<<endl;
    return 0;
}

Single File Programming Question
==================================
     2.Problem Statement
==================================

Amit, an e-commerce manager, is working on an inventory management system to track the top-selling products. 
Given the sales data of various products, he wants to quickly determine the Kth best-selling product 
to make informed restocking decisions.

Help Amit implement Heap Sort to efficiently find the Kth best-selling product from the given sales data.

Input format :
The first line of input consists of an integer n, representing the number of products.

The second line consists of n space-separated integers, representing the sales data of each product.

The third line contains an integer K, representing the rank of the product to retrieve.

Output format :
The output prints the Kth best-selling product based on the given sales data.



Refer to the sample output for formatting specifications.

Code constraints :
The given test cases fall under the following specifications:

1 ≤ n ≤ 105

1 ≤ sales data of each product ≤ 109

1 ≤ K ≤ n

Sample test cases :
Input 1 :
5
10 20 15 5 25
2
Output 1 :
20
Input 2 :
8
50 30 40 20 10 25 15 35
4
Output 2 :
30

===================================
           Program
===================================
#include<bits/stdc++.h>
using namespace std;
void maxHeapify(vector<int>&arr,int n,int i){
    int largest = i;
    int l = 2*i+1;
    int r = 2*i+2;
    if(l<n && arr[l]>arr[largest])
        largest = l;
    if(r<n && arr[r]>arr[largest])
        largest = r;  
    if(largest!=i){
        swap(arr[i],arr[largest]);
        maxHeapify(arr,n,largest);
    }
}
void HeapSort(vector<int>&arr,int n){
    for(int i=n/2-1;i>=0;i--)
        maxHeapify(arr,n,i);
    for(int i=n-1;i>0;i--){
        swap(arr[0],arr[i]);
        maxHeapify(arr,i,0);
    }
}
int main(){
    int n;
    cin>>n;
    vector<int>sales(n);
    for(int i=0;i<n;i++){
        cin>>sales[i];
    }
    int k;
    cin>>k;
    HeapSort(sales,n);
    cout<<sales[n-k]<<endl;
    return 0;
}
